document.addEventListener("DOMContentLoaded", function () {
  // Function to update quantity and recalculate total price
  function updateQuantity(prId, delta) {
    fetch(/count/update-quantity?id=${prId}&delta=${delta}, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then(response => response.json())
      .then(data => {
          if(data.stockQuantity==data.newQuantity){
            if(delta==-1){
              if(data.stockQuantity && data.newQuantity){
                window.location.href=/cart?email=${'<%=email%>'}
              }
            }else{
              if(!data.stockQuantity){
                console.log(data.stockQuantity)
                reachedFunction(data.stockQuantity,prId)
              }
            
            }
            
          }  
        
        if (data.success) {
          // Update the UI to reflect the new quantity
          var quantityElement = document.getElementById(quantity-${prId});
          if (quantityElement) {
            quantityElement.value = data.newQuantity
          }
          recalculateTotalPrice(prId);  
        } else {
          console.error("Error:", data.message);
        }
      })
      .catch(error => {
        console.error("Error:", error);
      });
  }

  // Function to recalculate total price for a specific product based on its current quantity
 // Function to recalculate total price for a specific product based on its current quantity
  function recalculateTotalPrice(prId) {
fetch(/count/get-total-price, {
  method: "GET",
  headers: {
    "Content-Type": "application/json",
  },
})
.then(response => response.json())
.then(data => {
  if (data.success) {
    console.log("Updated Total Price:", data.productTotalPrices[prId]);       
    var totalPriceElement = document.getElementById(total-price-product-${prId});
    var totalPrice = document.getElementById("total-price");
    var totalPriceBerore = document.getElementById("total-price-before");
    var hiddenInput= document.getElementById("hiddenInput")
    

if (totalPriceElement) {
  totalPriceElement.textContent = new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', maximumFractionDigits: 0 }).format(data.productTotalPrices[prId]);
}

if (totalPrice) {
  totalPrice.textContent = new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR'}).format(data.totalPrice);
  totalPriceBerore.textContent = new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(data.totalPrice);
  hiddenInput.value=data.totalPrice
}

  } else {
    console.error("Error:", data.message);
  }               
})                       
.catch(error => {
  console.error("Error:", error);
});
}


  // Decrease button click event
  document.querySelectorAll(".decrease-link").forEach(function (link) {
    console.log(link, "this is link");
    link.addEventListener("click", function () {
      var prId = this.getAttribute("data-prid");
      updateQuantity(prId, -1);
    });
  });

  // Increase button click event
  document.querySelectorAll(".increase-link").forEach(function (link) {
    link.addEventListener("click", function () {
      var prId = this.getAttribute("data-prid");
      updateQuantity(prId, 1);
    });
  });





      
    });